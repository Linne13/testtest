package tester;

import java.io.BufferedReader;
import java.io.IOException;

import enums.Degree;
import enums.Faculty;
import enums.Position;
import enums.Unit;
import storage.Storage;
import users.Admin;
import users.Executor;
import users.Manager;
import users.Student;
import users.Teacher;

public class Updater {
	public static void updateStudent(BufferedReader in, int num) throws IOException {
		student: while(true) {
			Student student = Storage.students.get(num);
			System.out.println("What do you want to change?\n1. Password.\n2. Speciality.\n3. Year of study.\n4. First name.\n5. Last name.\n Press q to return to menu.");
			String change = in.readLine();
			if (change.equals("1")) {
				System.out.println("Write new password.");
				student.setPassword(in.readLine().hashCode());
				System.out.println("Password changed succesfully.");
				continue student;
			} else if(change.equals("2")) {
				System.out.println("Write new speciality.");
				student.setSpeciality(in.readLine());
				faculty: while(true) {
					System.out.println("Choose new faculty.");
					System.out.println("1. FIT\n2. BS.\n3. FOGI\n4. ISE.");										
					try {
						String faculty = in.readLine().trim();
						student.setFaculty(Faculty.valueOf(faculty.toUpperCase()));
						break;
					} catch (IllegalArgumentException e) {
						System.out.println("Invalid format.");
						continue faculty;
					}	
				}
				System.out.println("Speciality changed succesfully.");
				continue student;
			} else if(change.equals("3")) {
				System.out.println("Write new year.");
				student.setYear(Integer.parseInt(in.readLine()));
				System.out.println("Year changed succesfully.");
				continue student;
			} else if(change.equals("4")) {
				System.out.println("Write new first name.");
				student.setName(in.readLine());
				System.out.println("First name changed succesfully.");
				continue student;
			} else if(change.equals("5")) {
				System.out.println("Write new last name.");
				student.setLastName(in.readLine());
				System.out.println("Last name changed succesfully.");
				continue student;
			} else if(change.equals("q")) break;
			else {
				System.out.println("Invalid input.");
				continue student;
			}
		}
	}
	
	public static void updateTeacher(BufferedReader in, int num) throws IOException {
		teacher: while(true) {
		Teacher teacher = Storage.teachers.get(num);
		System.out.println("What do you want to change?\n1. Password.\n2. Position.\n3. Degree.\n4. Salary.\n5. First name.\n6. Last name.\n7.Email.\n Press q to return to menu.");
		String change = in.readLine();
		if (change.equals("1")) {
			System.out.println("Write new password.");
			teacher.setPassword(in.readLine().hashCode());
			System.out.println("Password changed succesfully.");
			continue teacher;
		} else if(change.equals("2")) {
			position: while(true) {
				System.out.println("Choose new position.");
				System.out.println("1. TUTOR\n2. LECTOR\n3. PROFESSOR\n4. SENIOR_LECTOR");										
				try {
					String position= in.readLine().trim();
					teacher.setPosition(Position.valueOf(position.toUpperCase()));
					break;
				} catch (IllegalArgumentException e) {
					System.out.println("Invalid format.");
					continue position;
				}	
			}
			System.out.println("Position changed succesfully.");
			continue teacher;
		} else if(change.equals("3")) {
			degree: while(true) {
				System.out.println("Choose new degree.");
				System.out.println("1. PHD\n2. MS\n3. BA");										
				try {
					String degree= in.readLine().trim();
					teacher.setDegree(Degree.valueOf(degree.toUpperCase()));
					break;
				} catch (IllegalArgumentException e) {
					System.out.println("Invalid format.");
					continue degree;
				}	
			}
			System.out.println("Degree changed succesfully.");
			continue teacher;
		} else if(change.equals("4")) {
			System.out.println("Write new salary.");
			teacher.setSalary(Double.parseDouble(in.readLine()));
			System.out.println("Salary changed succesfully.");
			continue teacher;
		}else if(change.equals("5")) {
			System.out.println("Write new first name.");
			teacher.setName(in.readLine());
			System.out.println("First name changed succesfully.");
			continue teacher;
		} else if(change.equals("6")) {
			System.out.println("Write new last name.");
			teacher.setLastName(in.readLine());
			System.out.println("Last name changed succesfully.");
			continue teacher;
		} else if(change.equals("7")) {
			System.out.println("Write new email.");
			teacher.setEmail(in.readLine());
			System.out.println("Email changed succesfully.");
			continue teacher;
		} else if(change.equals("q")) break;
		else {
			System.out.println("Invalid input.");
			continue teacher;
		}
		}
	}
	
	public static void updateManager(BufferedReader in, int num) throws IOException {
		
		manager: while(true)
		{
			Manager manager = Storage.managers.get(num);
			System.out.println("What do you want to change?\n1. Password.\n2. Department.\n3. Salary.\n4. First name.\n5. Last name.\6.Email.\n Press q to return to menu.");
			String change = in.readLine();
			if (change.equals("1")) {
				System.out.println("Write new password.");
				manager.setPassword(in.readLine().hashCode());
				System.out.println("Password changed succesfully.");
				continue manager;
			} else if(change.equals("2")) {
				unit: while(true) {
					System.out.println("Choose new department.");
					System.out.println("1. OR\n2. IT");										
					try {
						String unit= in.readLine().trim();
						manager.setType(Unit.valueOf(unit.toUpperCase()));
						break;
					} catch (IllegalArgumentException e) {
						System.out.println("Invalid format.");
						continue unit;
					}	
				}
				System.out.println("Department changed succesfully.");
				continue manager;
			} else if(change.equals("3")) {
				System.out.println("Write new salary.");
				manager.setSalary(Double.parseDouble(in.readLine()));
				System.out.println("Salary changed succesfully.");
				continue manager;
			}else if(change.equals("4")) {
				System.out.println("Write new first name.");
				manager.setName(in.readLine());
				System.out.println("First name changed succesfully.");
				continue manager;
			} else if(change.equals("5")) {
				System.out.println("Write new last name.");
				manager.setLastName(in.readLine());
				System.out.println("Last name changed succesfully.");
				continue manager;
			} else if(change.equals("6")) {
				System.out.println("Write new email.");
				manager.setEmail(in.readLine());
				System.out.println("Email changed succesfully.");
				continue manager;
			} else if(change.equals("q")) break;
			else {
				System.out.println("Invalid input.");
				continue manager;
			}
		}
	}
	
	public static void updateExecutor(BufferedReader in, int num) throws IOException {
		executor: while(true) {

			Executor executor = Storage.executors.get(num);
			System.out.println("What do you want to change?\n1. Password.\n2. Salary. \n3. First name.\n4. Last name.\n5. Email.\n Press q to return to menu.");
			String change = in.readLine();
			if (change.equals("1")) {
				System.out.println("Write new password.");
				executor.setPassword(in.readLine().hashCode());
				System.out.println("Password changed succesfully.");
				continue executor;
			} else if(change.equals("2")) {
				System.out.println("Write new salary.");
				executor.setSalary(Double.parseDouble(in.readLine()));
				System.out.println("Salary changed succesfully.");
				continue executor;
			} else if(change.equals("3")) {
				System.out.println("Write new first name.");
				executor.setName(in.readLine());
				System.out.println("First name changed succesfully.");
				continue executor;
			} else if(change.equals("4")) {
				System.out.println("Write new last name.");
				executor.setLastName(in.readLine());
				System.out.println("Last name changed succesfully.");
				continue executor;
			} else if(change.equals("5")) {
				System.out.println("Write new email.");
				executor.setEmail(in.readLine());
				System.out.println("Email changed succesfully.");
				continue executor;
			} else if(change.equals("q")) break;
			else {
				System.out.println("Invalid input.");
				continue executor;
			}
		}
	}
	public static void updateAdmin(BufferedReader in, int num) throws IOException {
	
		admin: while(true)
		{
			Admin adm = Storage.admins.get(num);
			System.out.println("What do you want to change?\n1. Password.\n2. Salary. \n3. First name.\n4. Last name. \n5. Email.\n Press q to exit.");
			String change = in.readLine();
			if (change.equals("1")) {
				System.out.println("Write new password.");
				adm.setPassword(in.readLine().hashCode());
				System.out.println("Password changed succesfully.");
				continue admin;
			} else if(change.equals("2")) {
				System.out.println("Write new salary.");
				adm.setSalary(Double.parseDouble(in.readLine()));
				System.out.println("Salary changed succesfully.");
				continue admin;
			} else if(change.equals("3")) {
				System.out.println("Write new first name.");
				adm.setName(in.readLine());
				System.out.println("First name changed succesfully.");
				continue admin;
			} else if(change.equals("4")) {
				System.out.println("Write new last name.");
				adm.setLastName(in.readLine());
				System.out.println("Last name changed succesfully.");
				continue admin;
			} else if(change.equals("5")) {
				System.out.println("Write new email.");
				adm.setEmail(in.readLine());
				System.out.println("Email changed succesfully.");
				continue admin;
			} 
			else if(change.equals("q")) break;
			else {
				System.out.println("Invalid input.");
				continue admin;
			}
		}
	}
	

}
